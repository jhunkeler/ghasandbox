name: Install STASIS

description: |
  Installs STASIS

inputs:
  prefix:
    type: string
    description: STASIS installation prefix
    required: false
    default: "${{ github.workspace }}/.local"

  build_type:
    type: string
    description: |
      Type of build:
        Release, RelWithDebInfo, Debug, or MinSizeRel
    required: false
    default: "${{ github.workspace }}/.local"

outputs:
  installdir:
    description: STASIS installation directory
    value: ${{ steps.install-stasis.outputs.installdir }}

  bindir:
    description: STASIS bin directory
    value: ${{ steps.install-stasis.outputs.bindir }}

  sysconfdir:
    description: STASIS etc directory
    value: ${{ steps.install-stasis.outputs.sysconfdir }}

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        repository: 'spacetelescope/stasis'
        path: ${{ github.workspace }}/stasis

    - if: ${{ runner.os == "Linux" }}
      name: Install STASIS dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ca-certificates cmake libcurl4-openssl-dev libxml2-dev rsync
      shell: bash

    - if: ${{ runner.os == "macOS" }}
      name: Install STASIS dependencies
      run: |
        brew update
        brew install curl cmake libxml2 rsync
      shell: bash

    - name: Install STASIS
      id: install-stasis
      run: |
        rm -rf ${{ github.workspace }}/stasis/build
        cd ${{ github.workspace }}/stasis
        mkdir -p build
        cd build
        cmake .. \
            -DCMAKE_INSTALL_PREFIX="${{ inputs.prefix }}" \
            -DCMAKE_BUILD_TYPE="${{ inputs.build_type }}"
        make
        make install
        echo "installdir=${{ inputs.prefix }}" >> $GITHUB_OUTPUT
        echo "bindir=${{ inputs.prefix }}/bin" >> $GITHUB_OUTPUT
        echo "sysconfdir=${{ inputs.prefix }}/etc" >> $GITHUB_OUTPUT
      shell: bash

    - name: Remove STASIS source
      run: |
        rm -rf ${{ github.workspace }}/stasis
      shell: bash
