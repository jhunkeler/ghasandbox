[default]

[meta]
mission = roman
name = ROMANDP
version = 0.17.0
rc = 1
final = false
python = 3.12

[conda]
installer_name = Miniforge3
installer_version = 24.9.0-0
installer_platform = {{env:STASIS_CONDA_PLATFORM}}
installer_arch = {{env:STASIS_CONDA_ARCH}}
installer_baseurl = https://github.com/conda-forge/miniforge/releases/download/{{conda.installer_version}}
pip_packages = 
    romancal==0.17.0

[runtime]
PYTHONUNBUFFERED = 1
TEST_BIGDATA = https://bytesalad.stsci.edu/artifactory
PATCH_TABLE_PATH = /grp/roman/scsb/tesselation/patches.asdf
CRDS_OBSERVATORY = roman
CRDS_CONTEXT = roman_0065.pmap
CRDS_CACHE = ./crds_cache
CRDS_SERVER_URL = https://roman-serverless.stsci.edu
CRDS_PATH = /grp/crds/roman/test/
CRDS_CLIENT_RETRY_COUNT = 3
CRDS_CLIENT_RETRY_DELAY_SECONDS = 20

[test:romancal]
parallel = false
repository = https://github.com/spacetelescope/romancal
script_setup = 
    webbpsf_archive=webbpsf-data-LATEST.tar.gz
    curl -L -o ${webbpsf_archive} https://stsci.box.com/shared/static/qxpiaxsjwo15ml6m4pkhtk36c9jgj70k.gz
    tar -xvf ${webbpsf_archive}
    mamba install freetds
    pip install -e '.[test]'
    sdpfile=requirements-sdp.txt
    grep -v romancal "$sdpfile" > "$TMPDIR/$sdpfile"
    pip install -r "$TMPDIR/$sdpfile"
    pip install --upgrade pytest pytest-env
    pip install pytest-xdist ddtrace
script = 
    echo "CRDS_CONTEXT = $(crds list --contexts $CRDS_CONTEXT --mappings | grep pmap)"
    export WEBBPSF_PATH=$(pwd)/webbpsf-data
    pytest \
        -r fEsx \
        -n 2 \
        --dist=loadscope \
        --slow \
        --bigdata \
        --env=dev \
        --webbpsf \
        --cov --cov-report=xml:coverage.xml \
        --color=no \
        --basetemp="{{ func:basetemp_dir() }}" \
        --junitxml="{{ func:junitxml_file() }}" \

[deploy:artifactory:test results]
files = 
    {{ storage.results_dir }}/results-*.xml
dest = {{ meta.mission }}/{{ info.build_name }}/results/

[deploy:artifactory:delivery]
files = 
    {{ storage.output_dir }}/**
dest = {{ meta.mission }}/{{ info.build_name }}/

[deploy:docker]
registry = bytesalad.stsci.edu
image_compression = zstd -v -9 -c
build_args = 
    SNAPSHOT_INPUT={{ info.release_name }}.yml
    SNAPSHOT_PKGDIR=packages
tags = 
    {{ meta.name }}:{{ info.build_number }}-py{{ meta.python_compact }}
    {{ deploy.docker.registry }}/{{ meta.name }}:{{ info.build_number }}-py{{ meta.python_compact }}
test_script = 
    source /etc/profile
    python -m pip freeze
    mamba info

